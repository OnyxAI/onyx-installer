#############################################################################
# Makefile for building: onyx_installer
# Generated by qmake (2.01a) (Qt 4.8.6) on: lun. 2. oct. 19:39:37 2017
# Project:  onyx_installer.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_HAVE_MMX -DQT_HAVE_3DNOW -DQT_HAVE_SSE -DQT_HAVE_MMXEXT -DQT_HAVE_SSE2 -DQT_THREAD_SUPPORT -DQT_NEEDS_QMAIN -DQT_NO_DYNAMIC_CAST
CFLAGS        = -pipe -g -Wall -Wextra $(DEFINES)
CXXFLAGS      = -pipe -g -fno-exceptions -Wall -Wextra -fno-rtti $(DEFINES)
INCPATH       = -I'c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/include/QtCore' -I'c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/include/QtNetwork' -I'c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/include/QtGui' -I'c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/include' -I'w32-lib/zlib-1.2.8' -I'c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/include/ActiveQt' -I'debug' -I'.' -I'c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/default'
LINK        =        g++
LFLAGS        =        -static -Wl,-subsystem,windows
LIBS        =        -L'c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/lib' -lmingw32 -lqtmaind debug/onyx_installer_resource_res.o -lz -L./w32-lib/zlib-1.2.8 -lQtGuid -lQtNetworkd -lgdi32 -lcomdlg32 -loleaut32 -limm32 -lwinmm -lwinspool -lmsimg32 -lQtCored -lole32 -luuid -lws2_32 -ladvapi32 -lshell32 -luser32 -lkernel32 
QMAKE         = c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/bin/qmake.exe
IDC           = c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/bin/idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = debug/onyx_installer_resource_res.o
COPY          = cp
SED           = 
COPY_FILE     = $(COPY)
COPY_DIR      = cp -r
DEL_FILE      = rm
DEL_DIR       = rmdir
MOVE          = mv
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = debug/

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		utils.cpp \
		io.cpp \
		langselection.cpp \
		updatenotification.cpp \
		supporteddevice.cpp \
		versionselection.cpp \
		preseeddevice.cpp \
		licenseagreement.cpp \
		deviceselection.cpp \
		downloadprogress.cpp \
		extractprogress.cpp \
		successdialog.cpp \
		preseeder.cpp \
		extractworker.cpp \
		writeimageworker.cpp \
		diskdevice.cpp \
		io_windows.cpp debug/moc_mainwindow.cpp \
		debug/moc_langselection.cpp \
		debug/moc_updatenotification.cpp \
		debug/moc_versionselection.cpp \
		debug/moc_preseeddevice.cpp \
		debug/moc_licenseagreement.cpp \
		debug/moc_deviceselection.cpp \
		debug/moc_downloadprogress.cpp \
		debug/moc_extractprogress.cpp \
		debug/moc_successdialog.cpp \
		debug/moc_extractworker.cpp \
		debug/moc_writeimageworker.cpp \
		debug/qrc_assets.cpp
OBJECTS       = debug/main.o \
		debug/mainwindow.o \
		debug/utils.o \
		debug/io.o \
		debug/langselection.o \
		debug/updatenotification.o \
		debug/supporteddevice.o \
		debug/versionselection.o \
		debug/preseeddevice.o \
		debug/licenseagreement.o \
		debug/deviceselection.o \
		debug/downloadprogress.o \
		debug/extractprogress.o \
		debug/successdialog.o \
		debug/preseeder.o \
		debug/extractworker.o \
		debug/writeimageworker.o \
		debug/diskdevice.o \
		debug/io_windows.o \
		debug/moc_mainwindow.o \
		debug/moc_langselection.o \
		debug/moc_updatenotification.o \
		debug/moc_versionselection.o \
		debug/moc_preseeddevice.o \
		debug/moc_licenseagreement.o \
		debug/moc_deviceselection.o \
		debug/moc_downloadprogress.o \
		debug/moc_extractprogress.o \
		debug/moc_successdialog.o \
		debug/moc_extractworker.o \
		debug/moc_writeimageworker.o \
		debug/qrc_assets.o
DIST          = 
QMAKE_TARGET  = onyx_installer
DESTDIR        = debug/ #avoid trailing-slash linebreak
TARGET         = onyx_installer.exe
DESTDIR_TARGET = debug/onyx_installer.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Debug  $(DESTDIR_TARGET)

$(DESTDIR_TARGET): ui_mainwindow.h ui_langselection.h ui_updatenotification.h ui_versionselection.h ui_preseeddevice.h ui_licenseagreement.h ui_deviceselection.h ui_downloadprogress.h ui_extractprogress.h ui_successdialog.h $(OBJECTS) debug/onyx_installer_resource_res.o
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) object_script.onyx_installer.Debug  $(LIBS)

debug/onyx_installer_resource_res.o: onyx_installer_resource.rc
	windres -i onyx_installer_resource.rc -o debug/onyx_installer_resource_res.o --include-dir=. $(DEFINES)

qmake:  FORCE
	@$(QMAKE) -o Makefile.Debug onyx_installer.pro

dist:
	$(ZIP) onyx_installer.zip $(SOURCES) $(DIST) onyx_installer.pro c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/features/device_config.prf c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/qconfig.pri c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/features/qt_functions.prf c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/features/qt_config.prf c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/win32-g++/qmake.conf c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/features/exclusive_builds.prf c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/features/default_pre.prf c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/features/win32/default_pre.prf c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/features/debug.prf c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/features/debug_and_release.prf c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/features/default_post.prf c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/features/win32/default_post.prf c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/features/build_pass.prf c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/features/static.prf c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/features/win32/exceptions_off.prf c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/features/warn_on.prf c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/features/qt.prf c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/features/win32/thread.prf c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/features/moc.prf c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/features/win32/windows.prf c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/features/win32/stl_off.prf c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/features/win32/rtti_off.prf c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/features/resources.prf c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/features/uic.prf c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/features/yacc.prf c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/features/lex.prf c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/mkspecs/features/include_source_dir.prf c:\MinGW\qt\qt-everywhere-opensource-src-4.8.6\lib\qtmaind.prl c:\MinGW\qt\qt-everywhere-opensource-src-4.8.6\lib\QtGuid.prl c:\MinGW\qt\qt-everywhere-opensource-src-4.8.6\lib\QtNetworkd.prl c:\MinGW\qt\qt-everywhere-opensource-src-4.8.6\lib\QtCored.prl onyx.ts onyx_fr.ts onyx.ts onyx_fr.ts HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) debug/main.o debug/mainwindow.o debug/utils.o debug/io.o debug/langselection.o debug/updatenotification.o debug/supporteddevice.o debug/versionselection.o debug/preseeddevice.o debug/licenseagreement.o debug/deviceselection.o debug/downloadprogress.o debug/extractprogress.o debug/successdialog.o debug/preseeder.o debug/extractworker.o debug/writeimageworker.o debug/diskdevice.o debug/io_windows.o debug/moc_mainwindow.o debug/moc_langselection.o debug/moc_updatenotification.o debug/moc_versionselection.o debug/moc_preseeddevice.o debug/moc_licenseagreement.o debug/moc_deviceselection.o debug/moc_downloadprogress.o debug/moc_extractprogress.o debug/moc_successdialog.o debug/moc_extractworker.o debug/moc_writeimageworker.o debug/qrc_assets.o
	-$(DEL_FILE) debug/onyx_installer_resource_res.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Debug

check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: debug/moc_mainwindow.cpp debug/moc_langselection.cpp debug/moc_updatenotification.cpp debug/moc_versionselection.cpp debug/moc_preseeddevice.cpp debug/moc_licenseagreement.cpp debug/moc_deviceselection.cpp debug/moc_downloadprogress.cpp debug/moc_extractprogress.cpp debug/moc_successdialog.cpp debug/moc_extractworker.cpp debug/moc_writeimageworker.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) debug/moc_mainwindow.cpp debug/moc_langselection.cpp debug/moc_updatenotification.cpp debug/moc_versionselection.cpp debug/moc_preseeddevice.cpp debug/moc_licenseagreement.cpp debug/moc_deviceselection.cpp debug/moc_downloadprogress.cpp debug/moc_extractprogress.cpp debug/moc_successdialog.cpp debug/moc_extractworker.cpp debug/moc_writeimageworker.cpp
debug/moc_mainwindow.cpp: supporteddevice.h \
		diskdevice.h \
		mainwindow.h
	C:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 mainwindow.h -o debug/moc_mainwindow.cpp

debug/moc_langselection.cpp: supporteddevice.h \
		ui_langselection.h \
		langselection.h
	C:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 langselection.h -o debug/moc_langselection.cpp

debug/moc_updatenotification.cpp: updatenotification.h
	C:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 updatenotification.h -o debug/moc_updatenotification.cpp

debug/moc_versionselection.cpp: supporteddevice.h \
		ui_versionselection.h \
		versionselection.h
	C:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 versionselection.h -o debug/moc_versionselection.cpp

debug/moc_preseeddevice.cpp: supporteddevice.h \
		ui_preseeddevice.h \
		preseeddevice.h
	C:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 preseeddevice.h -o debug/moc_preseeddevice.cpp

debug/moc_licenseagreement.cpp: ui_licenseagreement.h \
		licenseagreement.h
	C:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 licenseagreement.h -o debug/moc_licenseagreement.cpp

debug/moc_deviceselection.cpp: diskdevice.h \
		ui_deviceselection.h \
		deviceselection.h
	C:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 deviceselection.h -o debug/moc_deviceselection.cpp

debug/moc_downloadprogress.cpp: downloadprogress.h
	C:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 downloadprogress.h -o debug/moc_downloadprogress.cpp

debug/moc_extractprogress.cpp: extractprogress.h
	C:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 extractprogress.h -o debug/moc_extractprogress.cpp

debug/moc_successdialog.cpp: successdialog.h
	C:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 successdialog.h -o debug/moc_successdialog.cpp

debug/moc_extractworker.cpp: extractworker.h
	C:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 extractworker.h -o debug/moc_extractworker.cpp

debug/moc_writeimageworker.cpp: writeimageworker.h
	C:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 writeimageworker.h -o debug/moc_writeimageworker.cpp

compiler_rcc_make_all: debug/qrc_assets.cpp
compiler_rcc_clean:
	-$(DEL_FILE) debug/qrc_assets.cpp
debug/qrc_assets.cpp: assets.qrc \
		icon.png \
		resources/icon_128x128.png \
		resources/logo.png \
		resources/SourceSansPro-Regular.ttf \
		resources/fb.png \
		resources/forward.png \
		resources/spinner.gif \
		resources/twitter.png \
		resources/styles.qss \
		resources/backward.png \
		w32-lib/usbit32/bs.img \
		w32-lib/usbit32/usbitcmd.exe
	c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/bin/rcc.exe -name assets assets.qrc -o debug/qrc_assets.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h ui_langselection.h ui_updatenotification.h ui_versionselection.h ui_preseeddevice.h ui_licenseagreement.h ui_deviceselection.h ui_downloadprogress.h ui_extractprogress.h ui_successdialog.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h ui_langselection.h ui_updatenotification.h ui_versionselection.h ui_preseeddevice.h ui_licenseagreement.h ui_deviceselection.h ui_downloadprogress.h ui_extractprogress.h ui_successdialog.h
ui_mainwindow.h: mainwindow.ui
	c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/bin/uic.exe mainwindow.ui -o ui_mainwindow.h

ui_langselection.h: langselection.ui
	c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/bin/uic.exe langselection.ui -o ui_langselection.h

ui_updatenotification.h: updatenotification.ui
	c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/bin/uic.exe updatenotification.ui -o ui_updatenotification.h

ui_versionselection.h: versionselection.ui
	c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/bin/uic.exe versionselection.ui -o ui_versionselection.h

ui_preseeddevice.h: preseeddevice.ui
	c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/bin/uic.exe preseeddevice.ui -o ui_preseeddevice.h

ui_licenseagreement.h: licenseagreement.ui
	c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/bin/uic.exe licenseagreement.ui -o ui_licenseagreement.h

ui_deviceselection.h: deviceselection.ui
	c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/bin/uic.exe deviceselection.ui -o ui_deviceselection.h

ui_downloadprogress.h: downloadprogress.ui
	c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/bin/uic.exe downloadprogress.ui -o ui_downloadprogress.h

ui_extractprogress.h: extractprogress.ui
	c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/bin/uic.exe extractprogress.ui -o ui_extractprogress.h

ui_successdialog.h: successdialog.ui
	c:/MinGW/qt/qt-everywhere-opensource-src-4.8.6/bin/uic.exe successdialog.ui -o ui_successdialog.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 



####### Compile

debug/main.o: main.cpp mainwindow.h \
		supporteddevice.h \
		diskdevice.h \
		utils.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/main.o main.cpp

debug/mainwindow.o: mainwindow.cpp mainwindow.h \
		supporteddevice.h \
		diskdevice.h \
		ui_mainwindow.h \
		langselection.h \
		ui_langselection.h \
		updatenotification.h \
		versionselection.h \
		ui_versionselection.h \
		preseeddevice.h \
		ui_preseeddevice.h \
		deviceselection.h \
		ui_deviceselection.h \
		utils.h \
		io.h \
		licenseagreement.h \
		ui_licenseagreement.h \
		downloadprogress.h \
		extractprogress.h \
		successdialog.h \
		preseeder.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/mainwindow.o mainwindow.cpp

debug/utils.o: utils.cpp utils.h \
		supporteddevice.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/utils.o utils.cpp

debug/io.o: io.cpp utils.h \
		supporteddevice.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/io.o io.cpp

debug/langselection.o: langselection.cpp langselection.h \
		supporteddevice.h \
		ui_langselection.h \
		utils.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/langselection.o langselection.cpp

debug/updatenotification.o: updatenotification.cpp updatenotification.h \
		ui_updatenotification.h \
		utils.h \
		supporteddevice.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/updatenotification.o updatenotification.cpp

debug/supporteddevice.o: supporteddevice.cpp supporteddevice.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/supporteddevice.o supporteddevice.cpp

debug/versionselection.o: versionselection.cpp versionselection.h \
		supporteddevice.h \
		ui_versionselection.h \
		utils.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/versionselection.o versionselection.cpp

debug/preseeddevice.o: preseeddevice.cpp preseeddevice.h \
		supporteddevice.h \
		ui_preseeddevice.h \
		utils.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/preseeddevice.o preseeddevice.cpp

debug/licenseagreement.o: licenseagreement.cpp licenseagreement.h \
		ui_licenseagreement.h \
		utils.h \
		supporteddevice.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/licenseagreement.o licenseagreement.cpp

debug/deviceselection.o: deviceselection.cpp deviceselection.h \
		diskdevice.h \
		ui_deviceselection.h \
		utils.h \
		supporteddevice.h \
		io.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/deviceselection.o deviceselection.cpp

debug/downloadprogress.o: downloadprogress.cpp downloadprogress.h \
		ui_downloadprogress.h \
		utils.h \
		supporteddevice.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/downloadprogress.o downloadprogress.cpp

debug/extractprogress.o: extractprogress.cpp extractprogress.h \
		ui_extractprogress.h \
		utils.h \
		supporteddevice.h \
		io.h \
		extractworker.h \
		writeimageworker.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/extractprogress.o extractprogress.cpp

debug/successdialog.o: successdialog.cpp successdialog.h \
		ui_successdialog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/successdialog.o successdialog.cpp

debug/preseeder.o: preseeder.cpp preseeder.h \
		mainwindow.h \
		supporteddevice.h \
		diskdevice.h \
		utils.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/preseeder.o preseeder.cpp

debug/extractworker.o: extractworker.cpp extractworker.h \
		utils.h \
		supporteddevice.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/extractworker.o extractworker.cpp

debug/writeimageworker.o: writeimageworker.cpp writeimageworker.h \
		io.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/writeimageworker.o writeimageworker.cpp

debug/diskdevice.o: diskdevice.cpp diskdevice.h \
		utils.h \
		supporteddevice.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/diskdevice.o diskdevice.cpp

debug/io_windows.o: io_windows.cpp utils.h \
		supporteddevice.h \
		io.h \
		diskdevice.h \
		writeimageworker.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/io_windows.o io_windows.cpp

debug/moc_mainwindow.o: debug/moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_mainwindow.o debug/moc_mainwindow.cpp

debug/moc_langselection.o: debug/moc_langselection.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_langselection.o debug/moc_langselection.cpp

debug/moc_updatenotification.o: debug/moc_updatenotification.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_updatenotification.o debug/moc_updatenotification.cpp

debug/moc_versionselection.o: debug/moc_versionselection.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_versionselection.o debug/moc_versionselection.cpp

debug/moc_preseeddevice.o: debug/moc_preseeddevice.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_preseeddevice.o debug/moc_preseeddevice.cpp

debug/moc_licenseagreement.o: debug/moc_licenseagreement.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_licenseagreement.o debug/moc_licenseagreement.cpp

debug/moc_deviceselection.o: debug/moc_deviceselection.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_deviceselection.o debug/moc_deviceselection.cpp

debug/moc_downloadprogress.o: debug/moc_downloadprogress.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_downloadprogress.o debug/moc_downloadprogress.cpp

debug/moc_extractprogress.o: debug/moc_extractprogress.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_extractprogress.o debug/moc_extractprogress.cpp

debug/moc_successdialog.o: debug/moc_successdialog.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_successdialog.o debug/moc_successdialog.cpp

debug/moc_extractworker.o: debug/moc_extractworker.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_extractworker.o debug/moc_extractworker.cpp

debug/moc_writeimageworker.o: debug/moc_writeimageworker.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_writeimageworker.o debug/moc_writeimageworker.cpp

debug/qrc_assets.o: debug/qrc_assets.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/qrc_assets.o debug/qrc_assets.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

